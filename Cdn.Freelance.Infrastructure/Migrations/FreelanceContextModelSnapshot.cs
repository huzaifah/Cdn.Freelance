// <auto-generated />
using System;
using Cdn.Freelance.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cdn.Freelance.Infrastructure.Migrations
{
    [DbContext(typeof(FreelanceContext))]
    partial class FreelanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("freelance")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("userseq")
                .IncrementsBy(10);

            modelBuilder.Entity("Cdn.Freelance.Domain.Users.SkillSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("skill");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_skillset");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_skillset_user_id");

                    b.ToTable("skillset", "freelance");
                });

            modelBuilder.Entity("Cdn.Freelance.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "userseq");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("created_by");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("email_address");

                    b.Property<string>("Hobby")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("hobby");

                    b.Property<string>("IdentityGuid")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("identity_guid");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("modified_by");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("phone_number");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("IdentityGuid")
                        .IsUnique()
                        .HasDatabaseName("ix_users_identity_guid");

                    b.ToTable("users", "freelance");
                });

            modelBuilder.Entity("Cdn.Freelance.Domain.Users.SkillSet", b =>
                {
                    b.HasOne("Cdn.Freelance.Domain.Users.User", null)
                        .WithMany("SkillSets")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_skillset_users_user_id");
                });

            modelBuilder.Entity("Cdn.Freelance.Domain.Users.User", b =>
                {
                    b.Navigation("SkillSets");
                });
#pragma warning restore 612, 618
        }
    }
}
